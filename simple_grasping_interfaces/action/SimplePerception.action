# Detect horizontal planes (like table plane or shelf) and objects on top of them
# Idea is: "Objects can't fly" -> Detect plane -> remove plane -> spatial clustering -> done

geometry_msgs/Point querry_point #planes and objects will be sorted by distance to this point
bool sort_planes_by_height #if true, sort planes by height (lowest to highest)


# Area of interest
# The plane bounding box is used to define the area of interest to search for objects
# First the plane bb is enlarged in z (height) and moved upwards, to reach [height_above_plane] but exclude the plane itself
# Seccond we shrink/expand the plane bb by [width_adjustment] meters in x and y
float32 height_above_plane #height above a plane to search for objects #defauts to 0.3m
float32 width_adjustment # negative: shrink plane bb by x meters, positive: expand plane bb by x meters

---
# Result
bool success
string message

Plane[] planes
Object[] objects

---
# Feedback
int32 state

int32 FILTERING=0 #initial state where point cloud is filtered
int32 NORMAL_ESTIMATION=1 #normal vector estimation
int32 PLANE_DETECTION=2 #plane detection
int32 PLANE_REFINEMENT=3 #plane refinement using RANSAC
int32 PLANE_FILTERING=4 #plane filtering
int32 OBJECT_DETECTION=5 #object detection